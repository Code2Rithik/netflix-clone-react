{"version":3,"sources":["Components/WithSpinner/WithSpinnerMovie.js","Components/CollectionGridItem/CollectionGridItem.js","Components/CollectionGrid/CollectionGrid.js","Utils/GridScrollArrows.js","Components/CollectionGrid/CollectionGridMovie.js"],"names":["WithSpinnerMovie","WrappedComponent","isMovieGridLoading","isMovieOverviewLoading","otherProps","CollectionGridItem","item","title","listItems","addItem","overview","backdrop_path","poster_path","name","className","src","IMAGE_BASE_URL","BACKDROP_SIZE","alt","AddToList","CollectionGrid","gridRef","React","createRef","this","props","movieGridItems","tvShowGridItems","movies","tvshow","icon","faChevronLeft","onClick","node","move","current","pixelWidth","window","innerWidth","console","log","$","animate","scrollLeft","LeftGridArrow","ref","map","id","faChevronRight","RightGridArrow","Component","connect","state","selectMovieGridItems","selectTVGridItems","mapStateToProps","createStructuredSelector","selectIsMovieFetching","CollectionGridMovie","compose"],"mappings":"8NAceA,IAXU,SAAAC,GAAgB,OACvC,YAAmE,IAAhEC,EAA+D,EAA/DA,mBAAmBC,EAA4C,EAA5CA,uBAA2BC,EAAiB,iBAE9D,OAAOF,EACH,cAAC,IAAD,IACCC,EACC,KACA,cAACF,EAAD,eAAsBG,O,sKCmBnBC,EAxBY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KACpBC,GADmD,EAAzBC,UAAyB,EAAdC,QACiBH,EAAtDC,OAAOG,EAA+CJ,EAA/CI,SAAUC,EAAqCL,EAArCK,cAAeC,EAAsBN,EAAtBM,YAAaC,EAASP,EAATO,KACrD,OACE,sBAAKC,UAAU,YAAf,UACE,qBACEC,IAAG,UAAKC,KAAL,OAAsBC,KAAtB,OAAsCN,GACzCO,IAAI,QACJJ,UAAU,mBAEZ,qBACEC,IAAG,UAAKC,KAAL,OAAsBC,KAAtB,OAAsCL,GACzCM,IAAI,QACJJ,UAAU,yCAEZ,sBAAKA,UAAS,UAAKP,EAAQ,wBAA0B,sBAArD,UACE,oBAAIO,UAAU,mBAAd,SAAkCP,IAClC,oBAAIO,UAAU,mBAAd,SAAkCD,IAClC,sBAAMC,UAAU,sBAAhB,SAAuCJ,IACvC,cAACS,EAAA,EAAD,CAAWb,KAAMA,W,0DCVnBc,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,QAAUC,IAAMC,YAFT,E,0CAKd,WAAU,IAAD,OACP,EAA4DC,KAAKC,MAAzDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBAAiBC,EAAzC,EAAyCA,OAAQC,EAAjD,EAAiDA,OACjD,OACE,sBAAKf,UAAU,kBAAf,UACE,sBAAMA,UAAU,8BAAhB,SACE,cAAC,IAAD,CACEgB,KAAMC,IACNjB,UAAU,oCACVkB,QAAS,kBCzBQ,SAAAC,GAC3B,IAAIC,EAAOD,EAAKE,QAEZC,EADQC,OAAOC,WACM,KACzBC,QAAQC,IAAIJ,GACZK,IAAEP,GAAMQ,QACN,CACEC,WAAY,KAAOP,GAErB,QDgBuBQ,CAAc,EAAKvB,cAGtC,sBAAKP,UAAU,yBAAyB+B,IAAKrB,KAAKH,QAAlD,UACE,sBAAKP,UAAU,yBAAf,UACGc,EACGF,EAAeoB,KAAI,SAAAxC,GAAI,OACrB,cAAC,EAAD,CAAkCA,KAAMA,GAAfA,EAAKyC,OAEhC,KACHlB,EACGF,EAAgBmB,KAAI,SAAAxC,GAAI,OACtB,cAAC,EAAD,CAAkCA,KAAMA,GAAfA,EAAKyC,OAEhC,QAEN,sBAAMjC,UAAU,+BAAhB,SACE,cAAC,IAAD,CACEgB,KAAMkB,IACNlC,UAAU,qCACVkB,QAAS,kBChCO,SAAAC,GAC5B,IAAIC,EAAOD,EAAKE,QAEZC,EADQC,OAAOC,WACM,KACzBG,IAAEP,GAAMQ,QACN,CACEC,WAAY,KAAOP,GAErB,QDwByBa,CAAe,EAAK5B,wB,GAlCpBC,IAAM4B,WAgDpBC,iBALS,SAAAC,GAAK,MAAK,CAChC1B,eAAgB2B,YAAqBD,GACrCzB,gBAAiB2B,YAAkBF,MAGtBD,CAAyB/B,I,iCE7DxC,6DASMmC,EAAkBC,YAAyB,CAC/CtD,mBAAoBuD,MAGhBC,EAAsBC,YAC1BR,YAAQI,GACRvD,IAF0B2D,CAG1BvC,KAEasC","file":"static/js/7.b04dcd75.chunk.js","sourcesContent":["import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\n\nconst WithSpinnerMovie = WrappedComponent => \n  ({ isMovieGridLoading,isMovieOverviewLoading, ...otherProps }) => {\n    \n      return isMovieGridLoading\n        ? <Spinner />\n        : (isMovieOverviewLoading\n          ? null\n          : <WrappedComponent {...otherProps} />)\n       \n};\n\nexport default WithSpinnerMovie;","import React from \"react\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../Config/config\";\nimport \"./CollectionGridItem.scss\";\nimport AddToList from \"../AddToList/AddToList\";\n\nconst CollectionGridItem = ({ item, listItems, addItem }) => {\n  const { title, overview, backdrop_path, poster_path, name } = item;\n  return (\n    <div className=\"grid-item\">\n      <img\n        src={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop_path}`}\n        alt=\"movie\"\n        className=\"grid-item__img\"\n      />\n      <img\n        src={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${poster_path}`}\n        alt=\"movie\"\n        className=\"grid-item__img grid-item__mobile-img\"\n      />\n      <div className={`${title ? \"grid-item__movie-text\" : \"grid-item__tv-text\"}`}>\n        <h1 className=\"grid-item__title\">{title}</h1>\n        <h1 className=\"grid-item__title\">{name}</h1>\n        <span className=\"grid-item__overview\">{overview}</span>\n        <AddToList item={item} />\n      </div>\n    </div>\n  );\n};\n\nexport default CollectionGridItem;","import React from \"react\";\nimport \"./CollectionGrid.scss\";\nimport CollectionGridItem from \"../CollectionGridItem/CollectionGridItem\";\nimport { connect } from \"react-redux\";\nimport { selectMovieGridItems } from \"../../Redux/Movie/movie-selectors\";\nimport { selectTVGridItems } from \"../../Redux/TVShow/tv-selectors\";\nimport {\n  faChevronLeft,\n  faChevronRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LeftGridArrow, RightGridArrow } from \"../../Utils/GridScrollArrows\";\n\nclass CollectionGrid extends React.Component {\n  constructor() {\n    super();\n    this.gridRef = React.createRef();\n  }\n\n  render() {\n    const { movieGridItems, tvShowGridItems, movies, tvshow } = this.props;\n    return (\n      <div className=\"collection-grid\">\n        <span className=\"collection-grid__left-arrow\">\n          <FontAwesomeIcon\n            icon={faChevronLeft}\n            className=\"collection-grid__left-arrow--icon\"\n            onClick={() => LeftGridArrow(this.gridRef)}\n          />\n        </span>\n        <div className=\"collection-grid__outer\" ref={this.gridRef}>\n          <div className=\"collection-grid__inner\">\n            {movies\n              ? movieGridItems.map(item => (\n                  <CollectionGridItem key={item.id} item={item} />\n                ))\n              : null}\n            {tvshow\n              ? tvShowGridItems.map(item => (\n                  <CollectionGridItem key={item.id} item={item} />\n                ))\n              : null}\n          </div>\n          <span className=\"collection-grid__right-arrow\">\n            <FontAwesomeIcon\n              icon={faChevronRight}\n              className=\"collection-grid__right-arrow--icon\"\n              onClick={() => RightGridArrow(this.gridRef)}\n            />\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  movieGridItems: selectMovieGridItems(state),\n  tvShowGridItems: selectTVGridItems(state)\n});\n\nexport default connect(mapStateToProps)(CollectionGrid);","import $ from \"jquery\";\n\nexport const LeftGridArrow = node => {\n  var move = node.current;\n  var width = window.innerWidth;\n  var pixelWidth = width + \"px\";\n  console.log(pixelWidth);\n  $(move).animate(\n    {\n      scrollLeft: \"-=\" + pixelWidth\n    },\n    \"slow\"\n  );\n};\n\nexport const RightGridArrow = node => {\n  var move = node.current;\n  var width = window.innerWidth;\n  var pixelWidth = width + \"px\";\n  $(move).animate(\n    {\n      scrollLeft: \"+=\" + pixelWidth\n    },\n    \"slow\"\n  );\n};","import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\n\nimport { selectIsMovieFetching } from \"../../Redux/Movie/movie-selectors\";\n\nimport WithSpinnerMovie from \"../WithSpinner/WithSpinnerMovie\";\nimport CollectionGrid from \"./CollectionGrid\";\n\nconst mapStateToProps = createStructuredSelector({\n  isMovieGridLoading: selectIsMovieFetching,\n});\n\nconst CollectionGridMovie = compose(\n  connect(mapStateToProps),\n  WithSpinnerMovie\n)(CollectionGrid);\n\nexport default CollectionGridMovie;"],"sourceRoot":""}